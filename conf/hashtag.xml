<?xml version="1.0" encoding="utf-8"?>
<beans xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<import resource="concurrent_fetcher.xml" />
	<import resource="extractor_beans/link_to_crawl.xml" />
	<import resource="extractor_beans/put_to.xml" />

	<bean id="cachedFetcher" class="it.stilo.uCrawler.actions.storage.CachedFetcher">
		<constructor-arg>
			<ref bean="concurrentFetcher" />
		</constructor-arg>

		<property name="action">
			<ref bean="pipeline" />
		</property>

		<property name="ck">
			<ref bean="hashtag-load" />
		</property>
	</bean>

	<bean id="crawler" class="it.stilo.uCrawler.crawler.Crawler"
		p:manager-ref="urlsManager" p:fetcher-ref="cachedFetcher" p:sleepTime="500" />

	<!-- pipeline di azioni -->
	<bean id="pipeline" class="it.stilo.uCrawler.core.actions.PipelinedAction"
		p:actions-ref="pipeline-actions" />

	<util:list id="pipeline-actions">
		<bean class="it.stilo.uCrawler.core.actions.PipelinedAction">
			<property name="actions">
				<list>
					<bean
						class="it.stilo.uCrawler.actions.extraction.flexible.ActionToExtraction">
						<property name="action">
							<bean
								class="it.stilo.uCrawler.actions.extraction.flexible.ExtractionPipeline">
								<property name="actions">
									<list>
										<!-- pages -->
										<bean
											class="it.stilo.uCrawler.actions.extraction.flexible.RouteToAll"
											p:target="div[class=pagination-container] li > a[href]"
											p:action-ref="link-to-crawl" />
										<!-- main and sub category array -->
										<bean
											class="it.stilo.uCrawler.actions.extraction.flexible.RouteToFirst"
											p:target="script:not([type])">
											<property name="action">
												<bean
													class="it.stilo.uCrawler.actions.extraction.flexible.GetAndPut"
													p:toDo-ref="get-html-text" p:where-ref="put-to-category">
												</bean>
											</property>
										</bean>
										<!-- hashtags -->
										<bean
											class="it.stilo.uCrawler.actions.extraction.flexible.RouteToAll"
											p:target="li > a[class=hash-tab clearfix no-hijax] > p"
											p:action-ref="hashtag-action" />
										<!-- hashtag links <bean class="it.stilo.uCrawler.actions.extraction.flexible.RouteToAll" 
											p:target="li > a[class=hash-tab clearfix no-hijax]" p:action-ref="link-to-crawl" 
											/> -->
									</list>
								</property>
							</bean>
						</property>
					</bean>
				</list>
			</property>
		</bean>
		<ref bean="hashtag-save" />
		<bean class="it.stilo.uCrawler.actions.ContextListToJson"
			p:producerObject-ref="put-to-hashtag-category" p:filename="twubs.json" />
		<bean class="it.stilo.uCrawler.url.UrlManagerToActionAdapter"
			c:_0-ref="urlsManager" />
	</util:list>
	
	<bean id="hashtag-action"
		class="it.stilo.uCrawler.actions.extraction.flexible.ExtractionPipeline">
		<property name="actions">
			<list>
				<bean class="it.stilo.uCrawler.actions.extraction.flexible.GetAndPut">
					<property name="toDo">
						<bean
							class="it.stilo.uCrawler.actions.extraction.flexible.GetFromContextField">
							<property name="producerObject">
								<ref bean="put-to-category" />
							</property>
						</bean>
					</property>
					<property name="where">
						<ref bean="put-to-hashtag-category" />
					</property>
				</bean>
				<bean class="it.stilo.uCrawler.actions.extraction.flexible.GetAndPut"
					p:toDo-ref="get-text">
					<property name="where">
						<bean
							class="it.stilo.uCrawler.actions.extraction.flexible.PutToListField"
							p:where="hashtagList" p:fieldName="hashtag" />
					</property>
				</bean>
				<ref bean="put-to-screen" />
			</list>
		</property>
	</bean>

	<bean id="hashtag-load"
		class="it.stilo.uCrawler.actions.storage.mapdb.LocalStorageLoad">
		<constructor-arg>
			<ref bean="map-hashtag" />
		</constructor-arg>
		<property name="mapName" value="pages" />
	</bean>

	<bean id="hashtag-save" class="it.stilo.uCrawler.actions.storage.mapdb.LocalStorage">
		<constructor-arg>
			<ref bean="map-hashtag" />
		</constructor-arg>
		<property name="mapName" value="pages" />
		<property name="compressTime" value="50" />
	</bean>

	<bean id="map-hashtag" class="it.stilo.uCrawler.actions.storage.mapdb.MapDBInstance"
		destroy-method="destroy">
		<property name="dataDir" value="./storage/local/twubs.com" />
		<property name="storeName" value="/twubs" />
	</bean>

	<bean id="urlsManager" class="it.stilo.uCrawler.url.URLManager">
		<constructor-arg>
			<bean class="it.stilo.uCrawler.url.datastructure.SimpleDataStructure" />
		</constructor-arg>
	</bean>

	<bean class="it.stilo.uCrawler.url.SeedsFromFile" c:_0-ref="urlsManager"
		c:_1="conf/twubs/seeds-hashtag-orig.txt" />

</beans>